# Re-import necessary libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error, r2_score

# Recreate the dataset for ASF Causality Analysis
data = {
    "Wild_Boar_Severity": [4, 3, 4, 3, 2, 3, 5, 4, 4, 5],
    "Domestic_Pig_Severity": [5, 4, 5, 4, 3, 4, 5, 5, 5, 5],
    "Virus_Load": [90, 85, 88, 80, 75, 82, 95, 92, 90, 98],
}

# Convert to DataFrame
df_causality = pd.DataFrame(data)

# Define features (X) and target variable (y)
X_causality = df_causality[["Wild_Boar_Severity", "Domestic_Pig_Severity"]]
y_causality = df_causality["Virus_Load"]

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X_causality, y_causality, test_size=0.2, random_state=42)

# Train and evaluate Linear Regression model
model_linear = LinearRegression()
model_linear.fit(X_train, y_train)
y_pred_linear = model_linear.predict(X_test)
mae_causality = mean_absolute_error(y_test, y_pred_linear)
r2_causality = r2_score(y_test, y_pred_linear)
accuracy_causality = r2_causality * 100

# Train and evaluate Random Forest Regressor model
model_rf = RandomForestRegressor(n_estimators=100, random_state=42)
model_rf.fit(X_train, y_train)
y_pred_rf = model_rf.predict(X_test)
mae_rf_causality = mean_absolute_error(y_test, y_pred_rf)
r2_rf_causality = r2_score(y_test, y_pred_rf)
accuracy_rf_causality = r2_rf_causality * 100

# Return computed values
mae_causality, r2_causality, accuracy_causality, mae_rf_causality, r2_rf_causality, accuracy_rf_causality
